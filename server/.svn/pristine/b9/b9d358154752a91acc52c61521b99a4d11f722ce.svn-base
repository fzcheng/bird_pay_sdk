package com.cheyooh.service.sdk.action.notify;


import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.lang.StringUtils;

import com.cheyooh.service.dal.DAL;
import com.cheyooh.service.dal.DALFactory;
import com.cheyooh.service.framework.idata.Cmd;
import com.cheyooh.service.framework.idata.Result;
import com.cheyooh.service.framework.idata.ResultXJContent;
import com.cheyooh.service.sdk.cfg.Cfg;
import com.cheyooh.service.sdk.db.dao.SdkNotifyMmdoMapper;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdo;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdoExample;


public class SdkqipapayNotify extends AbstractNotifyService<Cmd> {
	private String success_mgs = "ok";
	private String fail_mgs = "fail";
	private String key=Cfg.cfg.getString("sdk.sdkqipapay.key");;

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.cheyooh.service.framework.basic.Service#verify(com.cheyooh.service
	 * .framework.idata.Cmd)
	 */
	@Override
	protected Result verify(Cmd cmd) {
		return null;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.cheyooh.service.framework.basic.Service#execute(com.cheyooh.service
	 * .framework.idata.Cmd)
	 */
	@Override
	protected Result execute(Cmd cmd) {
		DAL dal = DALFactory.createDAL();
		try {
			String orderid = cmd.getServiceContext().getRequest()
					.getParameter("orderid");
			if (StringUtils.isEmpty(orderid)) {
				orderid = "";
			}

			String appid = cmd.getServiceContext().getRequest()
					.getParameter("appid");
			if (StringUtils.isEmpty(appid)) {
				appid = "";
			}

			String fid = cmd.getServiceContext().getRequest()
					.getParameter("fid");
			if (StringUtils.isEmpty(fid)) {
				fid = "";
			}

			String chid = cmd.getServiceContext().getRequest()
					.getParameter("chid");
			if (StringUtils.isEmpty(chid)) {
				chid = "";
			}

			String fee = cmd.getServiceContext().getRequest()
					.getParameter("fee");
			if (StringUtils.isEmpty(fee)) {
				fee = "";
			}
			
			String successfee = cmd.getServiceContext().getRequest()
					.getParameter("successfee");
			if (StringUtils.isEmpty(successfee)) {
				successfee = "";
			}
			
			String successtime = cmd.getServiceContext().getRequest()
					.getParameter("successtime");
			if (StringUtils.isEmpty(successtime)) {
				successtime = "";
			}
			
			
			String number = cmd.getServiceContext().getRequest()
					.getParameter("number");
			if (StringUtils.isEmpty(number)) {
				number = "";
			}

			String orderNo = cmd.getServiceContext().getRequest()
					.getParameter("exdata");
			if (StringUtils.isEmpty(orderNo)) {
				orderNo = "";
			}

			String provincenm = cmd.getServiceContext().getRequest()
					.getParameter("province");
			if (StringUtils.isEmpty(provincenm)) {
				provincenm = "";
			}

			String status = cmd.getServiceContext().getRequest()
					.getParameter("status");
			if (StringUtils.isEmpty(status)) {
				status = "";
			}

			String sign = cmd.getServiceContext().getRequest()
					.getParameter("sign");
			if (StringUtils.isEmpty(sign)) {
				sign = "";
			}

			logger.info("the sdkqipapay pay notify orderNo =" + orderNo);

			SdkNotifyMmdoMapper sdkNotifyMmdoMapper = dal
					.getMapper(SdkNotifyMmdoMapper.class);
			SdkNotifyMmdoExample sdkNotifyMmdoExample = new SdkNotifyMmdoExample();
			sdkNotifyMmdoExample.createCriteria().andOrderNoEqualTo(orderNo);
			SdkNotifyMmdo sdkNotifyMmdo = sdkNotifyMmdoMapper
					.selectOne(sdkNotifyMmdoExample);
			if (sdkNotifyMmdo == null) {
				return result(fail_mgs);
			}

			if (sdkNotifyMmdo.getNotifyStatus() == 1) {
				return result(fail_mgs);
			}

			String signPlaintext = "orderid=" + orderid + "appid=" + appid
					+ "&fid=" + fid + "&chid=" + chid + "&exdata=" + orderNo
					+ "&fee=" + fee + "&successfee="+successfee+"&successtime="+successtime+"&status="+status+"&key="+key;
//			logger.debug("the sdkqipapay pay notify signPlaintext :"+signPlaintext);
			
			String signCiphertext=DigestUtils.md5Hex(signPlaintext);
//			logger.debug("the sdkqipapay pay notify signCiphertext :"+signCiphertext);
			if(!sign.equals(signCiphertext)){
				return result(fail_mgs);
			}
			
			int notifyStatus = 0;
			if ("200".equals(status)) {
				notifyStatus = 1;
			} else {
				notifyStatus = 0;
			}
			sdkNotifyMmdo.setLinkid(orderid);
			sdkNotifyMmdo.setNotifyStatus(notifyStatus);
			sdkNotifyMmdo.setOriginalcode(status);
			if(StringUtils.isEmpty(sdkNotifyMmdo.getMobile())||StringUtils.isBlank(sdkNotifyMmdo.getMobile())){
				sdkNotifyMmdo.setMobile(number);
			}
			if(StringUtils.isEmpty(sdkNotifyMmdo.getKey())||StringUtils.isBlank(sdkNotifyMmdo.getKey())){
				sdkNotifyMmdo.setKey(provincenm);
			}
			sdkNotifyMmdoMapper.updateByPrimaryKey(sdkNotifyMmdo);
			dal.commit();
		} catch (Exception e) {
			logger.error("the sdkqipapay pay notify error!", e);
			result("Exception: " + e.getMessage() + ", class: ".getClass());
		} finally {
			dal.close();
		}
		return result(success_mgs);
	}

	private Result result(String mgs) {
		return new Result(new ResultXJContent(mgs, mgs));
	}
}
