package com.cheyooh.service.sdk.action.notify;


import java.text.SimpleDateFormat;
import java.util.Date;

import org.apache.commons.lang.StringUtils;

import com.cheyooh.service.dal.DAL;
import com.cheyooh.service.dal.DALFactory;
import com.cheyooh.service.framework.idata.Result;
import com.cheyooh.service.framework.idata.ResultXJContent;
import com.cheyooh.service.sdk.db.dao.SdkNotifyMmdoMapper;
import com.cheyooh.service.sdk.db.dao.SdkTelephoneMapper;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdo;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdoExample;
import com.cheyooh.service.sdk.db.entity.SdkTelephone;
import com.cheyooh.service.sdk.db.entity.SdkTelephoneExample;
import com.cheyooh.service.sdk.idata.notify.CmdLangtianNotifyData;

public class LangtianNotify extends
		AbstractNotifyService<CmdLangtianNotifyData> {

	@Override
	protected Result verify(CmdLangtianNotifyData cmd) {
		return null;
	}

	@Override
	protected Result execute(CmdLangtianNotifyData cmd) {
		/*
		 * if (!SUCCESS_MSG.equals(cmd.getStatus())) {
		 * logger.error("langtian notify error, data = " + cmd.toString()); DAL
		 * dal = DALFactory.createDAL(); try { String[] cmdArray =
		 * cmd.getPasswd().split(splitString); if (cmdArray.length > 1) {
		 * //以下失败计费订单信息回调给闪电平台,并记录相关信息 //为sdk_order表和sdk_mmdo_order表添加一条记录
		 * if(cmdArray.length==3){ if(StringUtils.isNotEmpty(cmdArray[2])){
		 * logger.info("enter the jifutong faile"); //为sdk_mmdo_order表添加一条记录
		 * SdkOrderMmdoMapper mmdoMapper = dal
		 * .getMapper(SdkOrderMmdoMapper.class); SdkOrderMmdo mmdo = new
		 * SdkOrderMmdo(); String
		 * fee=cmd.getServiceContext().getRequest().getParameter("fee");
		 * if(fee!=null){ mmdo.setReqOrderAmount(Float.valueOf(fee)); }
		 * mmdo.setReqSendContent(cmdArray[0]);
		 * mmdo.setRespSendContent(cmd.getPasswd()); String
		 * destAddr=cmd.getServiceContext().getRequest()
		 * .getParameter("DestAddr"); if(destAddr!=null){
		 * mmdo.setReqSendNumber(destAddr); mmdo.setRespSendNumber(destAddr); }
		 * mmdo.setReqTime(new Date()); String sendGameId =
		 * cmdArray[1].substring(cmdArray[1].length() - 3,
		 * cmdArray[1].length()); Integer gameId = Integer.valueOf(sendGameId);
		 * mmdo.setGameId(gameId); mmdo.setOperationType(CHINA_TELECOM);
		 * mmdo.setIpAddr(cmd.getRequestHost());
		 * mmdo.setPayChannelCode(TELECOM_LANGTIAN); mmdo.setRespStatus(0);
		 * mmdoMapper.insertSelective(mmdo);
		 * 
		 * //为sdk_order表添加一条记录 Date time=new Date(); String
		 * order_no=GenerateTool.createOrderNo(); SdkOrder order=new SdkOrder();
		 * order.setOrderNo(order_no); SdkGameMapper
		 * sdkGameMapper=dal.getMapper(SdkGameMapper.class); SdkGameExample
		 * sdkGameExample=new SdkGameExample();
		 * sdkGameExample.createCriteria().andGameIdEqualTo(gameId); SdkGame
		 * sdkGame=sdkGameMapper.selectOne(sdkGameExample); if(sdkGame!=null){
		 * order.setOrderName(sdkGame.getName());
		 * order.setCpId(sdkGame.getCpId()); } order.setGameId(gameId);
		 * if(fee!=null){ order.setOrderDesc(fee+"元"); } order.setType(9);
		 * order.setPayId(mmdo.getPayId()); if(fee!=null){
		 * order.setAmount(Float.valueOf(fee)); } order.setChannel("");
		 * order.setStatus(0); order.setCpExt(cmdArray[2]);
		 * order.setCreateTime(time); order.setNotifyStatus(0); //
		 * order.setNotifyTime(time); order.setCompleteTime(time);
		 * SdkOrderMapper mapperOrder = dal.getMapper(SdkOrderMapper.class);
		 * mapperOrder.insert(order); CallbackToJifutongThread
		 * callbackToJifutongThread=new
		 * CallbackToJifutongThread(cmdArray[2],"lost_money");
		 * callbackToJifutongThread.start(); } } dal.commit(); } else {
		 * logger.error
		 * ("langtian notify error, can not read the extend info, data = " +
		 * cmd.toString()); }
		 * 
		 * } catch (Exception e) {
		 * logger.error("langtian notify error exception, data = " +
		 * cmd.toString(), e); return fail("fail"); } finally { dal.close(); }
		 * return fail("fail"); }
		 */

		// 以下是回调成功记录的信息
		/*
		 * DAL dal = DALFactory.createDAL(); try { String[] cmdArray =
		 * cmd.getPasswd().split(splitString);
		 * logger.info("enter the langtian and the cmdArray length is : " +
		 * cmdArray.length); for (int i = 0; i < cmdArray.length; i++) {
		 * logger.info(cmdArray[i]); } if (cmdArray.length > 1) { SdkNotifyMmdo
		 * notifyMmdo = new SdkNotifyMmdo(); String sendContent = cmdArray[0];
		 * String sendGameId = cmdArray[1].substring( cmdArray[1].length() - 3,
		 * cmdArray[1].length()); Integer gameId = Integer.valueOf(sendGameId);
		 * notifyMmdo.setCmd(cmd.getPasswd()); notifyMmdo.setCreateTime(new
		 * Date()); notifyMmdo.setGameId(gameId);
		 * notifyMmdo.setKey(cmd.getStatus());
		 * notifyMmdo.setLinkid(cmd.getLinkID());
		 * notifyMmdo.setMobile(cmd.getMobile());
		 * notifyMmdo.setSpid(cmd.getType());
		 * notifyMmdo.setSpnum(cmd.getType());
		 * notifyMmdo.setOperationType(CHINA_TELECOM);
		 * notifyMmdo.setPayChannelCode(TELECOM_LANGTIAN);
		 * 
		 * String fee = cmd.getServiceContext().getRequest()
		 * .getParameter("fee"); if (fee != null) {
		 * notifyMmdo.setAmount(Float.valueOf(fee)); } //
		 * 以下成功计费订单信息回调给闪电平台,并记录相关信息 // 为sdk_order表和sdk_mmdo_order表添加一条记录 if
		 * (cmdArray.length == 3) { if (StringUtils.isNotEmpty(cmdArray[2])) {
		 * logger.info("enter the jifutong success"); // 为sdk_mmdo_order表添加一条记录
		 * SdkOrderMmdoMapper mmdoMapper = dal
		 * .getMapper(SdkOrderMmdoMapper.class); SdkOrderMmdo mmdo = new
		 * SdkOrderMmdo(); if (fee != null) {
		 * mmdo.setReqOrderAmount(Float.valueOf(fee)); }
		 * mmdo.setReqSendContent(cmdArray[0]);
		 * mmdo.setRespSendContent(cmd.getPasswd()); String destAddr =
		 * cmd.getServiceContext().getRequest() .getParameter("DestAddr"); if
		 * (destAddr != null) { mmdo.setReqSendNumber(destAddr);
		 * mmdo.setRespSendNumber(destAddr); } mmdo.setReqTime(new Date());
		 * mmdo.setGameId(gameId); mmdo.setOperationType(CHINA_TELECOM);
		 * mmdo.setIpAddr(cmd.getRequestHost());
		 * mmdo.setPayChannelCode(TELECOM_LANGTIAN); mmdo.setRespStatus(1);
		 * mmdoMapper.insertSelective(mmdo);
		 * 
		 * // 为sdk_order表添加一条记录 Date time = new Date(); String order_no =
		 * GenerateTool.createOrderNo(); SdkOrder order = new SdkOrder();
		 * order.setOrderNo(order_no); SdkGameMapper sdkGameMapper = dal
		 * .getMapper(SdkGameMapper.class); SdkGameExample sdkGameExample = new
		 * SdkGameExample(); sdkGameExample.createCriteria()
		 * .andGameIdEqualTo(gameId); SdkGame sdkGame = sdkGameMapper
		 * .selectOne(sdkGameExample); if (sdkGame != null) {
		 * order.setOrderName(sdkGame.getName());
		 * order.setCpId(sdkGame.getCpId()); } order.setGameId(gameId); if (fee
		 * != null) { order.setOrderDesc(fee + "元"); } order.setType(9);
		 * order.setPayId(mmdo.getPayId()); if (fee != null) {
		 * order.setAmount(Float.valueOf(fee)); } order.setChannel("");
		 * order.setStatus(1); order.setCpExt(cmdArray[2]);
		 * order.setCreateTime(time); order.setNotifyStatus(0); //
		 * order.setNotifyTime(time); order.setCompleteTime(time);
		 * SdkOrderMapper mapperOrder = dal .getMapper(SdkOrderMapper.class);
		 * mapperOrder.insert(order); CallbackToJifutongThread
		 * callbackToJifutongThread = new CallbackToJifutongThread( cmdArray[2],
		 * "get_money"); callbackToJifutongThread.start(); } }
		 * SdkNotifyMmdoMapper notifyMmdoMapper = dal
		 * .getMapper(SdkNotifyMmdoMapper.class);
		 * notifyMmdoMapper.insert(notifyMmdo); //
		 * notifyMmdoMapper.insertSelective(notifyMmdo); dal.commit(); } else {
		 * logger
		 * .error("langtian notify error, can not read the extend info, data = "
		 * + cmd.toString()); }
		 * 
		 * } catch (Exception e) { logger.error(
		 * "langtian notify error exception, data = " + cmd.toString(), e);
		 * return result("fail"); } finally { dal.close(); } return
		 * result("success");
		 */

		DAL dal = DALFactory.createDAL();
		String resultMsg="";
		try {
			String status=cmd.getStatus();
			String orderNo = cmd.getExtra();
			if (StringUtils.isEmpty(orderNo)
					&& StringUtils.isBlank(orderNo)) {
				orderNo = "";
			}
			if(StringUtils.isNotEmpty(orderNo)&&StringUtils.isNotBlank(orderNo)){
				Date time = new Date();
				StringBuilder sb = new StringBuilder();
				SimpleDateFormat sdf = new SimpleDateFormat("yyMMddHHmmss");
				sb.append(sdf.format(time));
				String year = sb.toString().substring(0, 2);
				orderNo=year+orderNo;
			}
			String linkId=cmd.getLinkId();
			if (StringUtils.isEmpty(linkId)
					&& StringUtils.isBlank(linkId)) {
				linkId = "";
			}
			String mobilephone=cmd.getMobile();
			if (StringUtils.isEmpty(mobilephone)
					&& StringUtils.isBlank(mobilephone)) {
				mobilephone = "";
			}
			String longCode=cmd.getLongCode();
			if (StringUtils.isEmpty(longCode)
					&& StringUtils.isBlank(longCode)) {
				longCode = "";
			}
			String msg=cmd.getMsg();
			if (StringUtils.isEmpty(msg)
					&& StringUtils.isBlank(msg)) {
				msg = "";
			}
			
			logger.info("the telecomlangtian notify orderNo is: " + orderNo);
			
			SdkNotifyMmdoMapper sdkNotifyMmdoMapper = dal.getMapper(SdkNotifyMmdoMapper.class);
			SdkNotifyMmdoExample sdkNotifyMmdoExample=new SdkNotifyMmdoExample();
			sdkNotifyMmdoExample.createCriteria().andOrderNoEqualTo(orderNo);
			SdkNotifyMmdo sdkNotifyMmdo=sdkNotifyMmdoMapper.selectOne(sdkNotifyMmdoExample);
			if(sdkNotifyMmdo!=null){
				int notifyStatus=0;
				if ("00".equalsIgnoreCase(status)) {
					notifyStatus=1;
				}else if("01".equalsIgnoreCase(status)){
					notifyStatus=0;
				}else {
					notifyStatus=0;
				}
				sdkNotifyMmdo.setLinkid(linkId);
				sdkNotifyMmdo.setMobile(mobilephone);
				sdkNotifyMmdo.setSpnum(longCode);
				sdkNotifyMmdo.setNotifyStatus(notifyStatus);
				sdkNotifyMmdo.setOriginalcode(status);
				sdkNotifyMmdo.setCmd(msg);
				SdkTelephoneMapper sdkTelephoneMapper = dal
						.getMapper(SdkTelephoneMapper.class);
				SdkTelephoneExample sdkTelephoneExample = new SdkTelephoneExample();
				sdkTelephoneExample.createCriteria().andMobilephoneEqualTo(
						mobilephone);
				SdkTelephone sdkTelephone = sdkTelephoneMapper
						.selectOne(sdkTelephoneExample);
				if (sdkTelephone != null) {
					sdkNotifyMmdo.setKey(String.valueOf(sdkTelephone
							.getProvinceNo()));
				}
				sdkNotifyMmdoMapper.updateByPrimaryKey(sdkNotifyMmdo);
				resultMsg="success";
			}else {
				resultMsg="fail";
			}
			dal.commit();
//			if ("00".equalsIgnoreCase(status)) {
//				SdkNotifyMmdo sdkNotifyMmdo = new SdkNotifyMmdo();
//				SdkOrderMapper sdkOrderMapper = dal
//						.getMapper(SdkOrderMapper.class);
//				SdkOrderExample sdkOrderExample = new SdkOrderExample();
//				sdkOrderExample.createCriteria().andOrderNoEqualTo(orderNo);
//				SdkOrder sdkOrder = sdkOrderMapper.selectOne(sdkOrderExample);
//				if (sdkOrder != null) {
//					SdkOrderMmdoMapper sdkOrderMmdoMapper = dal
//							.getMapper(SdkOrderMmdoMapper.class);
//					SdkOrderMmdoExample sdkOrderMmdoExample = new SdkOrderMmdoExample();
//					sdkOrderMmdoExample.createCriteria().andPayIdEqualTo(
//							sdkOrder.getPayId());
//					SdkOrderMmdo sdkOrderMmdo = sdkOrderMmdoMapper
//							.selectOne(sdkOrderMmdoExample);
//					if (sdkOrderMmdo != null) {
//						sdkNotifyMmdo.setOrderNo(orderNo);
//						sdkNotifyMmdo.setLinkid(cmd.getLinkId());
//						sdkNotifyMmdo.setSpid(sdkOrderMmdo.getReqSendContent());
//						sdkNotifyMmdo.setCmd(sdkOrderMmdo.getRespSendContent());
//						SdkTelephoneMapper sdkTelephoneMapper = dal
//								.getMapper(SdkTelephoneMapper.class);
//						SdkTelephoneExample sdkTelephoneExample = new SdkTelephoneExample();
//						sdkTelephoneExample.createCriteria().andImsiEqualTo(
//								sdkOrderMmdo.getRespImsi());
//						SdkTelephone sdkTelephone = sdkTelephoneMapper
//								.selectOne(sdkTelephoneExample);
//						if (sdkTelephone != null) {
//							sdkNotifyMmdo.setKey(String.valueOf(sdkTelephone
//									.getProvinceNo()));
//						}
//						sdkNotifyMmdo.setMobile(cmd.getMobile());
//						sdkNotifyMmdo.setSpnum(cmd.getLongCode());
//						sdkNotifyMmdo.setGameId(sdkOrderMmdo.getGameId());
//						sdkNotifyMmdo.setAmount(sdkOrderMmdo
//								.getReqOrderAmount());
//						sdkNotifyMmdo.setCreateTime(new Date());
//						sdkNotifyMmdo.setOperationType(sdkOrderMmdo
//								.getOperationType());
//						sdkNotifyMmdo.setPayChannelCode(sdkOrderMmdo
//								.getPayChannelCode());
//						sdkNotifyMmdo.setAdditionalStatus(sdkOrderMmdo
//								.getAdditionalStatus());
//						SdkNotifyMmdoMapper sdkNotifyMmdoMapper = dal
//								.getMapper(SdkNotifyMmdoMapper.class);
//						sdkNotifyMmdoMapper.insertSelective(sdkNotifyMmdo);
//					}
//				}
//
//				dal.commit();
//			} else {
//				logger.error("langtian notify error, can not read the extend info, data = "
//						+ cmd.toString());
//			}

		} catch (Exception e) {
			logger.error(
					"langtian notify error exception, data = " + cmd.toString(),
					e);
			resultMsg="fail";
		} finally {
			dal.close();
		}
		return result(resultMsg);

	}

	private Result result(String msg) {
		return new Result(new ResultXJContent(msg, msg));
	}
}
