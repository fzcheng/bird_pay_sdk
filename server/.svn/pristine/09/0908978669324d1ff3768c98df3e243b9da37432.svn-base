package com.cheyooh.service.sdk.action.notify;

import java.util.Date;

import org.apache.commons.lang.StringUtils;

import com.cheyooh.service.dal.DAL;
import com.cheyooh.service.dal.DALFactory;
import com.cheyooh.service.framework.idata.Cmd;
import com.cheyooh.service.framework.idata.Result;
import com.cheyooh.service.framework.idata.ResultXJContent;
import com.cheyooh.service.sdk.db.dao.SdkNotifyMmdoMapper;
import com.cheyooh.service.sdk.db.dao.SdkOrderMapper;
import com.cheyooh.service.sdk.db.dao.SdkOrderMmdoMapper;
import com.cheyooh.service.sdk.db.dao.SdkTelephoneMapper;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdo;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdoExample;
import com.cheyooh.service.sdk.db.entity.SdkOrder;
import com.cheyooh.service.sdk.db.entity.SdkOrderExample;
import com.cheyooh.service.sdk.db.entity.SdkOrderMmdo;
import com.cheyooh.service.sdk.db.entity.SdkOrderMmdoExample;
import com.cheyooh.service.sdk.db.entity.SdkTelephone;
import com.cheyooh.service.sdk.db.entity.SdkTelephoneExample;

public class SdkSkypayNotify extends AbstractNotifyService<Cmd> {
	private String success_mgs = "result=0";
	private String fail_mgs = "result=0";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.cheyooh.service.framework.basic.Service#verify(com.cheyooh.service
	 * .framework.idata.Cmd)
	 */
	@Override
	protected Result verify(Cmd cmd) {
		return null;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.cheyooh.service.framework.basic.Service#execute(com.cheyooh.service
	 * .framework.idata.Cmd)
	 */
	@Override
	protected Result execute(Cmd cmd) {
		DAL dal = DALFactory.createDAL();
		try {
			String orderId = cmd.getServiceContext().getRequest()
					.getParameter("orderId");
			if (StringUtils.isEmpty(orderId)) {
				orderId = "";
			}
			String resultCode = cmd.getServiceContext().getRequest()
					.getParameter("resultCode");
			if (StringUtils.isEmpty(resultCode)) {
				resultCode = "";
			}
			String payNum = cmd.getServiceContext().getRequest()
					.getParameter("payNum");
			if (StringUtils.isEmpty(payNum)) {
				payNum = "";
			}
			String realAmount = cmd.getServiceContext().getRequest()
					.getParameter("realAmount");
			if (StringUtils.isEmpty(realAmount)) {
				realAmount = "";
			}
			String ext1 = cmd.getServiceContext().getRequest()
					.getParameter("ext1");
			if (StringUtils.isEmpty(ext1)) {
				ext1 = "";
			}
			String signMsg = cmd.getServiceContext().getRequest()
					.getParameter("signMsg");
			if (StringUtils.isEmpty(signMsg)) {
				signMsg = "";
			}		

			logger.info("the sdkskypay pay notify orderNo is :" + orderId);

			SdkNotifyMmdoMapper notifyMmdoMapper = dal
					.getMapper(SdkNotifyMmdoMapper.class);
			SdkNotifyMmdoExample notifyMmdoExample = new SdkNotifyMmdoExample();
			notifyMmdoExample.createCriteria().andOrderNoEqualTo(orderId);
			SdkNotifyMmdo notifyMmdo = notifyMmdoMapper
					.selectOne(notifyMmdoExample);
			if (notifyMmdo != null) {
				return result(success_mgs);
			}
			if(!"0".equals(resultCode)){
				return result(fail_mgs);
			}
			SdkOrderMapper sdkOrderMapper = dal.getMapper(SdkOrderMapper.class);
			SdkOrderExample sdkOrderExample = new SdkOrderExample();
			sdkOrderExample.createCriteria().andOrderNoEqualTo(orderId);
			SdkOrder sdkOrder = sdkOrderMapper.selectOne(sdkOrderExample);
			if (sdkOrder != null) {
				SdkOrderMmdoMapper sdkOrderMmdoMapper = dal
						.getMapper(SdkOrderMmdoMapper.class);
				SdkOrderMmdoExample sdkOrderMmdoExample = new SdkOrderMmdoExample();
				sdkOrderMmdoExample.createCriteria().andPayIdEqualTo(
						sdkOrder.getPayId());
				SdkOrderMmdo sdkOrderMmdo = sdkOrderMmdoMapper
						.selectOne(sdkOrderMmdoExample);
				if (sdkOrderMmdo != null) {
					SdkNotifyMmdo sdkNotifyMmdo = new SdkNotifyMmdo();
					sdkNotifyMmdo.setOrderNo(orderId);
					sdkNotifyMmdo.setLinkid(payNum);
					sdkNotifyMmdo.setSpid(sdkOrderMmdo.getReqSendContent());
					sdkNotifyMmdo.setCmd(sdkOrderMmdo.getReqSendContent());
					SdkTelephoneMapper sdkTelephoneMapper = dal
							.getMapper(SdkTelephoneMapper.class);
					SdkTelephoneExample sdkTelephoneExample = new SdkTelephoneExample();
					String imsi="";
					if(sdkOrderMmdo.getRespImsi()!=null){
						imsi=sdkOrderMmdo.getReqImsi();
					}
					sdkTelephoneExample.createCriteria().andImsiEqualTo(
							imsi);
					SdkTelephone sdkTelephone = sdkTelephoneMapper
							.selectOne(sdkTelephoneExample);
					if (sdkTelephone != null) {
						sdkNotifyMmdo.setKey(String.valueOf(sdkTelephone
								.getProvinceNo()));
						sdkNotifyMmdo.setMobile(sdkTelephone.getMobilephone());
					}
					sdkNotifyMmdo.setSpnum(sdkOrderMmdo.getReqSendNumber());
					sdkNotifyMmdo.setGameId(sdkOrderMmdo.getGameId());
					sdkNotifyMmdo.setAmount(sdkOrderMmdo.getReqOrderAmount());
					sdkNotifyMmdo.setCreateTime(new Date());
					sdkNotifyMmdo.setOperationType(sdkOrderMmdo
							.getOperationType());
					sdkNotifyMmdo.setPayChannelCode(sdkOrderMmdo
							.getPayChannelCode());
					sdkNotifyMmdo.setAdditionalStatus(sdkOrderMmdo
							.getAdditionalStatus());
					
					sdkOrder.setStatus(1);
					sdkOrderMapper.updateByPrimaryKey(sdkOrder);
					
					sdkOrderMmdo.setRespStatus(1);
					sdkOrderMmdoMapper.updateByPrimaryKey(sdkOrderMmdo);
					
					SdkNotifyMmdoMapper sdkNotifyMmdoMapper = dal
							.getMapper(SdkNotifyMmdoMapper.class);
					sdkNotifyMmdoMapper.insertSelective(sdkNotifyMmdo);
				}
			}
			dal.commit();
		} catch (Exception e) {
			logger.error("the sdkskypay pay notify error!", e);
			result("Exception: " + e.getMessage() + ", class: ".getClass());
		} finally {
			dal.close();
		}
		return result(success_mgs);
	}

	private Result result(String mgs) {
		return new Result(new ResultXJContent(mgs, mgs));
	}
}
