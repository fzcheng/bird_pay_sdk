/**
 * 
 */
package com.cheyooh.service.sdk.action.notify;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;

import javax.servlet.http.HttpServletRequest;

import com.cheyooh.service.framework.idata.Cmd;
import com.cheyooh.service.framework.idata.Result;
import com.cheyooh.service.framework.idata.ResultXJContent;

/**
 * @author Merlin
 * 
 */
public class UnicomReadNotify extends AbstractNotifyService<Cmd> {
  private static final String CHECK_RESP_STR = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><checkOrderIdRsp>0</checkOrderIdRsp>";
  private static final String NOTIFY_RESP_STR = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><callbackRsp>0</callbackRsp>";

  public UnicomReadNotify() {
  }

  /*
   * (non-Javadoc)
   * 
   * @see com.cheyooh.service.framework.basic.Service#verify(com.cheyooh.service.framework.idata.Cmd)
   */
  @Override
  protected Result verify(Cmd cmd) {
    return null;
  }

  /*
   * (non-Javadoc)
   * 
   * @see com.cheyooh.service.framework.basic.Service#execute(com.cheyooh.service.framework.idata.Cmd)
   */
  @Override
  protected Result execute(Cmd cmd) {
    String msg = "";
    try {
      HttpServletRequest request = cmd.getServiceContext().getRequest();
      String serviceid = request.getParameter("serviceid");
      logger.info("Unicom Read - serviceid = " + serviceid);

      InputStream in = request.getInputStream();
      BufferedReader reader = new BufferedReader(new InputStreamReader(in, "UTF-8"));
      StringBuffer xmlBuff = new StringBuffer();
      String line;
      while ((line = reader.readLine()) != null) {
        xmlBuff.append(line);
      }
      
      String xml = xmlBuff.toString();
      logger.info("Unicom Read - response body = " + xml);
      
      if ("validateorderid".equals(serviceid)) {
        msg = CHECK_RESP_STR;
      } else {
        msg = NOTIFY_RESP_STR;
      }
    } catch (Exception e) {
      logger.error("Unicom Read - error!", e);
    }

    return response(msg);
  }

  private Result response(String msg) {
    return new Result(new ResultXJContent(msg, msg));
  }
}
