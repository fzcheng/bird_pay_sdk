/**
 * 
 */
package com.cheyooh.service.sdk.action.notify;

import java.io.UnsupportedEncodingException;
import java.util.Date;

import org.apache.commons.lang.StringUtils;

import com.cheyooh.service.dal.DAL;
import com.cheyooh.service.dal.DALFactory;
import com.cheyooh.service.framework.idata.Cmd;
import com.cheyooh.service.framework.idata.Result;
import com.cheyooh.service.framework.idata.ResultXJContent;
import com.cheyooh.service.sdk.db.dao.SdkNotifyMmdoMapper;
import com.cheyooh.service.sdk.db.dao.SdkOrderMapper;
import com.cheyooh.service.sdk.db.dao.SdkOrderMmdoMapper;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdo;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdoExample;
import com.cheyooh.service.sdk.db.entity.SdkOrder;
import com.cheyooh.service.sdk.db.entity.SdkOrderExample;
import com.cheyooh.service.sdk.db.entity.SdkOrderMmdo;
import com.cheyooh.service.sdk.db.entity.SdkOrderMmdoExample;

/**
 * @author Merlin
 * 
 */
public class MobileGameBasePmNotify extends
		AbstractNotifyService<Cmd> {
	private static final Integer CHINA_MOBILE = 1;
	private static final String CMD = "mobilegamebasepm";
	private static final String SUCCESS = "{\"Res\":\"ok\"}";
	private static final String MOBILEGAMEBASEPM = "mobilegamebasepm";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.cheyooh.service.framework.basic.Service#verify(com.cheyooh.service
	 * .framework.idata.Cmd)
	 */
	@Override
	protected Result verify(Cmd cmd) {
		return null;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.cheyooh.service.framework.basic.Service#execute(com.cheyooh.service
	 * .framework.idata.Cmd)
	 */
	@Override
	protected Result execute(Cmd cmd) {
		DAL dal = DALFactory.createDAL();
		try {
			logger.info("enter the mobile game base notify");
			String orderid=cmd.getServiceContext().getRequest()
					.getParameter("orderid");
//			if(StringUtils.isEmpty(orderid)&&StringUtils.isBlank(orderid)){
//				orderid="";
//			}
			String price=cmd.getServiceContext().getRequest()
					.getParameter("price");
			float p=0;
			if(StringUtils.isNotBlank(price)&&StringUtils.isNotEmpty(price)){
				p=Float.valueOf(price);
			}
			String number=cmd.getServiceContext().getRequest()
					.getParameter("number");
			String exdata=cmd.getServiceContext().getRequest()
					.getParameter("exdata");
			String province=cmd.getServiceContext().getRequest()
					.getParameter("province");
			String proviceName="";
			if(StringUtils.isNotBlank(province)&&StringUtils.isNotEmpty(province)){
				try {
					proviceName=new String(province.getBytes("UTF-8"),  "utf-8");
				} catch (UnsupportedEncodingException e) {
					logger.error("mobile game base notify province change error!"+e);
				}
			}
			SdkNotifyMmdoMapper notifyMmdoMapper = dal
					.getMapper(SdkNotifyMmdoMapper.class);
			SdkNotifyMmdoExample example = new SdkNotifyMmdoExample();
			example.createCriteria().andLinkidEqualTo(orderid).andPayChannelCodeEqualTo("mobilegamebasepm");
			SdkNotifyMmdo entity = notifyMmdoMapper.selectOne(example);
			if (entity != null) {
				logger.info("mobile game base notify have handled!!!");
				return success();
			}
			
			
			SdkOrderMapper sdkOrderMapper = dal.getMapper(SdkOrderMapper.class);
			SdkOrderExample sdkOrderExample = new SdkOrderExample();
			sdkOrderExample.createCriteria().andOrderNoEqualTo(exdata);
			SdkOrder sdkOrder = sdkOrderMapper.selectOne(sdkOrderExample);
			if (sdkOrder != null) {
				SdkOrderMmdoMapper sdkOrderMmdoMapper = dal
						.getMapper(SdkOrderMmdoMapper.class);
				SdkOrderMmdoExample sdkOrderMmdoExample = new SdkOrderMmdoExample();
				sdkOrderMmdoExample.createCriteria().andPayIdEqualTo(
						sdkOrder.getPayId());
				SdkOrderMmdo sdkOrderMmdo = sdkOrderMmdoMapper
						.selectOne(sdkOrderMmdoExample);
				if (sdkOrderMmdo != null) {
					SdkNotifyMmdo notify = new SdkNotifyMmdo();
					notify.setAmount(p / 100f);
					notify.setCmd(CMD);
					notify.setCreateTime(new Date());
					
					notify.setAdditionalStatus(sdkOrderMmdo
							.getAdditionalStatus());
					notify.setGameId(sdkOrderMmdo.getGameId());
					notify.setOrderNo(sdkOrder.getOrderNo());
					
					notify.setKey(proviceName);
					notify.setLinkid(orderid);
					notify.setMobile(number);
					notify.setOperationType(CHINA_MOBILE);
					notify.setPayChannelCode(MOBILEGAMEBASEPM);
					// notify.setSpid(spid);
					// notify.setSpnum(spnum);

					notifyMmdoMapper.insertSelective(notify);
				}
			}
			
			dal.commit();
		} finally {
			dal.close();
		}
		return success();
	}

	@SuppressWarnings("unused")
	private Integer getGameId(String str) {
		try {
			return Integer.valueOf(str);
		} catch (NumberFormatException e) {
			logger.error(e);
			return null;
		}
	}

	private Result success() {

		return new Result(new ResultXJContent(SUCCESS, SUCCESS));
	}
}
