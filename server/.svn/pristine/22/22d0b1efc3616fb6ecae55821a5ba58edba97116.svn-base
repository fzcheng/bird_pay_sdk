/**
 * 
 */
package com.cheyooh.service.sdk.action.notify;

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Date;

import org.nuxeo.common.xmap.XMap;

import com.cheyooh.service.dal.DAL;
import com.cheyooh.service.dal.DALFactory;
import com.cheyooh.service.framework.idata.Cmd;
import com.cheyooh.service.framework.idata.Result;
import com.cheyooh.service.framework.idata.ResultXJContent;
import com.cheyooh.service.sdk.db.dao.SdkNotifyMmdoMapper;
import com.cheyooh.service.sdk.db.dao.SdkOrderMapper;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdo;
import com.cheyooh.service.sdk.db.entity.SdkOrder;
import com.cheyooh.service.sdk.idata.gameserver.XmlZhuowangPmNotify;

/**
 * @author Merlin
 *
 */
public class ZhuowangPmNotify extends AbstractNotifyService<Cmd> {
  private static final Integer CHINA_MOBILE = 1;
  private static final String ZHUOWANGPM = "zhuowangpm";
  /* (non-Javadoc)
   * @see com.cheyooh.service.framework.basic.Service#verify(com.cheyooh.service.framework.idata.Cmd)
   */
  @Override
  protected Result verify(Cmd cmd) {
    return null;
  }

  /* (non-Javadoc)
   * @see com.cheyooh.service.framework.basic.Service#execute(com.cheyooh.service.framework.idata.Cmd)
   */
  @Override
  protected Result execute(Cmd cmd) {
    String xml = null;
    try {
      InputStream in = cmd.getServiceContext().getRequest().getInputStream();
      BufferedReader reader = new BufferedReader(new InputStreamReader(in, "UTF-8"));
      StringBuffer xmlBuff = new StringBuffer();
      String line;
      while ((line = reader.readLine()) != null) {
        xmlBuff.append(line);
      }
      xml = xmlBuff.toString();
      logger.info("zhuowang pay message notify xml : " + xml);

      XmlZhuowangPmNotify notify = parseNotify(xml);
      handleNotify(notify, xml);
    } catch (Exception e) {
      logger.error("read the zhuowang pay notify error! xml = " + xml, e);
      fail("Exception: " + e.getMessage() + ", class: ".getClass());
    }
    return success();
  }
  
  private XmlZhuowangPmNotify parseNotify(String xml) throws Exception {
    XMap xmap = new XMap();
    xmap.register(XmlZhuowangPmNotify.class);

    ByteArrayInputStream in = new ByteArrayInputStream(xml.getBytes("UTF-8"));
    XmlZhuowangPmNotify notify = (XmlZhuowangPmNotify) xmap.load(in);

    return notify;
  }
  
  private Result handleNotify(XmlZhuowangPmNotify notify, String respXml) {
    DAL dal = DALFactory.createDAL();
    try {
      SdkNotifyMmdo notifyMmdo = new SdkNotifyMmdo();
      //notifyMmdo.setAmount(notify.getPrice()/100);
      notifyMmdo.setCmd(notify.getMoContent());
      notifyMmdo.setCreateTime(new Date());
      //notifyMmdo.setGameId(gameId);
      notifyMmdo.setKey(notify.getProvince());
      notifyMmdo.setLinkid(notify.getApTransactionId());
      //notifyMmdo.setMobile(notify.getFeeMsisdn());
      notifyMmdo.setOperationType(CHINA_MOBILE);
      notifyMmdo.setSpid(notify.getServiceAction());
      notifyMmdo.setSpnum(notify.getMoId());
      notifyMmdo.setPayChannelCode(ZHUOWANGPM);
      
      //获取金额
      SdkOrderMapper orderMapper = dal.getMapper(SdkOrderMapper.class);
      SdkOrder order = orderMapper.selectByPrimaryKey(notify.getApTransactionId());
      if (order != null) {
        notifyMmdo.setAmount(order.getAmount());
        notifyMmdo.setGameId(order.getGameId());
      }
      
      SdkNotifyMmdoMapper notifyMmdoDao = dal.getMapper(SdkNotifyMmdoMapper.class);
      notifyMmdoDao.insertSelective(notifyMmdo);
      
      dal.commit();
    } catch (Exception e) {
      fail("fail");
      logger.error(e);
    } finally {
      dal.close();
    }
    return success();
  }
  
  private Result success() {
    return new Result(new ResultXJContent("success", "success"));
  }

  private Result fail(String msg) {
    // log
    return new Result(new ResultXJContent(msg, msg));
  }
}
