package com.cheyooh.service.sdk.action.notify;

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Date;

import org.nuxeo.common.xmap.XMap;

import com.cheyooh.service.dal.DAL;
import com.cheyooh.service.dal.DALFactory;
import com.cheyooh.service.framework.idata.Cmd;
import com.cheyooh.service.framework.idata.Result;
import com.cheyooh.service.framework.idata.ResultXJContent;
import com.cheyooh.service.sdk.db.dao.SdkMmdoSettingMapper;
import com.cheyooh.service.sdk.db.dao.SdkNotifyMmdoMapper;
import com.cheyooh.service.sdk.db.entity.SdkMmdoSetting;
import com.cheyooh.service.sdk.db.entity.SdkMmdoSettingExample;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdo;
import com.cheyooh.service.sdk.idata.gameserver.XmlCmccjidiIosResp;

public class CmccjidiiosNotify extends AbstractNotifyService<Cmd> {
	private static String CMCCJIDIIOS = "cmccjidiios";
	private static final String cmdString_moguxiaoxiaole="796142 614216023396 20120101000000 40716005 000000000000 00000000000 4c7d29b06f107ea3ea7a157c6237ecd721a5530c ";
	private static final String cmdString_xingkongzhanji="794484 648416017001 20120101000000 40716005 000000000000 00000000000 5f7166d5eb56f524dfe2cf00f997ae9467b11c71 ";
	private Integer gameId=211;
	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.cheyooh.service.framework.basic.Service#verify(com.cheyooh.service
	 * .framework.idata.Cmd)
	 */
	@Override
	protected Result verify(Cmd cmd) {
		return null;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.cheyooh.service.framework.basic.Service#execute(com.cheyooh.service
	 * .framework.idata.Cmd)
	 */
	@Override
	protected Result execute(Cmd cmd) {
		DAL dal = DALFactory.createDAL();
		try {
			InputStream in = cmd.getServiceContext().getRequest()
					.getInputStream();
			BufferedReader reader = new BufferedReader(new InputStreamReader(
					in, "UTF-8"));
			StringBuffer xmlBuff = new StringBuffer();
			String line;
			while ((line = reader.readLine()) != null) {
				xmlBuff.append(line);
			}

			String xml = xmlBuff.toString();
			logger.info("the cmccjidiios notify xml : " + xml);

			XmlCmccjidiIosResp notify = parseNotify(xml);

			if (notify.gethRet() == 0) {
				SdkNotifyMmdo sdkNotifyMmdo = new SdkNotifyMmdo();
				String consumeCode = notify.getConsumeCode();
				String cmdString="";
				if(consumeCode.startsWith("0060551950")){
					cmdString=cmdString_moguxiaoxiaole+consumeCode;
					CMCCJIDIIOS="cmccjidiios";
				}else if(consumeCode.startsWith("0060436030")){
					cmdString=cmdString_xingkongzhanji+consumeCode;
					CMCCJIDIIOS="cmccjidiiosjiutian";
				}
				
				float amount = 0;
				SdkMmdoSettingMapper sdkMmdoSettingMapper=dal.getMapper(SdkMmdoSettingMapper.class);
				SdkMmdoSettingExample sdkMmdoSettingExample=new SdkMmdoSettingExample();
				sdkMmdoSettingExample.createCriteria().andContentEqualTo(cmdString).andUseStatusEqualTo(1);
				SdkMmdoSetting sdkMmdoSetting=sdkMmdoSettingMapper.selectOne(sdkMmdoSettingExample);
				if(sdkMmdoSetting!=null){
					gameId=sdkMmdoSetting.getGameId();
				}
				if (consumeCode.equals("006055195001")
						|| consumeCode.equals("006043603001")) {
					amount = 0.1f;
				} else if (consumeCode.equals("006055195002")
						|| consumeCode.equals("006043603002")) {
					amount = 1;
				} else if (consumeCode.equals("006055195003")
						|| consumeCode.equals("006043603003")) {
					amount = 2;
				} else if (consumeCode.equals("006055195004")) {
					amount = 3;
				} else if (consumeCode.equals("006055195005")
						|| consumeCode.equals("006043603004")) {
					amount = 4;
				} else if (consumeCode.equals("006055195006")
						|| consumeCode.equals("006043603005")) {
					amount = 5;
				} else if (consumeCode.equals("006055195007")
						|| consumeCode.equals("006043603006")) {
					amount = 6;
				} else if (consumeCode.equals("006043603007")) {
					amount = 7;
				} else if (consumeCode.equals("006055195008")
						|| consumeCode.equals("006043603008")) {
					amount = 8;
				} else if (consumeCode.equals("006055195009")
						|| consumeCode.equals("006043603009")) {
					amount = 10;
				} else if (consumeCode.equals("006043603011")) {
					amount = 12;
				} else if (consumeCode.equals("006043603012")) {
					amount = 14;
				} else if (consumeCode.equals("006055195010")
						|| consumeCode.equals("006043603010")) {
					amount = 15;
				} else if (consumeCode.equals("006043603013")) {
					amount = 16;
				} else if (consumeCode.equals("006043603014")) {
					amount = 20;
				} else if (consumeCode.equals("006055195011")) {
					amount = 30;
				}
				sdkNotifyMmdo.setAmount(amount);
				sdkNotifyMmdo.setCmd(consumeCode);
				sdkNotifyMmdo.setCreateTime(new Date());
				sdkNotifyMmdo.setLinkid(notify.getUserId());
//				sdkNotifyMmdo.setMobile("");
				sdkNotifyMmdo.setOperationType(1);
				sdkNotifyMmdo.setSpid(consumeCode);
				sdkNotifyMmdo.setSpnum("1065889920");
				sdkNotifyMmdo.setGameId(gameId);
				sdkNotifyMmdo.setPayChannelCode(CMCCJIDIIOS);
				SdkNotifyMmdoMapper sdkNotifyMmdoMapper = dal
						.getMapper(SdkNotifyMmdoMapper.class);
				sdkNotifyMmdoMapper.insertSelective(sdkNotifyMmdo);
			}
			dal.commit();
		} catch (Exception e) {
			logger.error(e);
		} finally {
			dal.close();
		}
		return success();
	}

	private XmlCmccjidiIosResp parseNotify(String xml) throws Exception {
		XMap xmap = new XMap();
		xmap.register(XmlCmccjidiIosResp.class);

		ByteArrayInputStream in = new ByteArrayInputStream(
				xml.getBytes("UTF-8"));
		XmlCmccjidiIosResp notify = (XmlCmccjidiIosResp) xmap.load(in);

		return notify;
	}

	private Result success() {
		return new Result(new ResultXJContent("ok", "ok"));
	}

}
