package com.cheyooh.service.sdk.action.notify;

import com.cheyooh.service.dal.DAL;
import com.cheyooh.service.dal.DALFactory;
import com.cheyooh.service.framework.idata.Cmd;
import com.cheyooh.service.framework.idata.Result;
import com.cheyooh.service.framework.idata.ResultXJContent;
import com.cheyooh.service.sdk.db.dao.SdkNotifyMmdoMapper;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdo;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdoExample;

public class YzcmccreadidoNotify extends AbstractNotifyService<Cmd> {
	private String success_mgs = "success";
	private String fail_mgs = "fail";
	
	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.cheyooh.service.framework.basic.Service#verify(com.cheyooh.service
	 * .framework.idata.Cmd)
	 */
	@Override
	protected Result verify(Cmd cmd) {
		return null;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.cheyooh.service.framework.basic.Service#execute(com.cheyooh.service
	 * .framework.idata.Cmd)
	 */
	@SuppressWarnings("unused")
	@Override
	protected Result execute(Cmd cmd) {
		DAL dal = DALFactory.createDAL();
		try {
			String status = cmd.getServiceContext().getRequest()
					.getParameter("status");
			String out_order_no = cmd.getServiceContext().getRequest()
					.getParameter("order_no");
			String user_mobile = cmd.getServiceContext().getRequest()
					.getParameter("user_mobile");
			String price = cmd.getServiceContext().getRequest()
					.getParameter("price");
			String orderNo = cmd.getServiceContext().getRequest()
					.getParameter("back_up");
			
			logger.info("the cmccyongzheng pay notify orderNo = "+orderNo);
			
			SdkNotifyMmdoMapper sdkNotifyMmdoMapper = dal
					.getMapper(SdkNotifyMmdoMapper.class);
			SdkNotifyMmdoExample sdkNotifyMmdoExample = new SdkNotifyMmdoExample();
			sdkNotifyMmdoExample.createCriteria().andOrderNoEqualTo(orderNo);
			SdkNotifyMmdo sdkNotifyMmdo = sdkNotifyMmdoMapper
					.selectOne(sdkNotifyMmdoExample);
			if (sdkNotifyMmdo == null) {
				return result(fail_mgs);
			}

			if (sdkNotifyMmdo.getNotifyStatus() == 1) {
				return result(fail_mgs);
			}
			
			int notifyStatus = 0;
			if ("1".equals(status)) {
				notifyStatus = 1;
			} else {
				notifyStatus = 0;
			}
			sdkNotifyMmdo.setNotifyStatus(notifyStatus);
			sdkNotifyMmdo.setOriginalcode(status);
			sdkNotifyMmdoMapper.updateByPrimaryKey(sdkNotifyMmdo);
			dal.commit();
		} catch (Exception e) {
			logger.error("the cmccyongzheng pay notify error!", e);
			result(fail_mgs);
		} finally {
			dal.close();
		}
		return result(success_mgs);
	}

	private Result result(String mgs) {
		return new Result(new ResultXJContent(mgs, mgs));
	}
}
