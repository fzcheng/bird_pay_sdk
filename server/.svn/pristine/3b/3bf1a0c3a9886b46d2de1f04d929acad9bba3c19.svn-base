package com.cheyooh.service.sdk.action.notify;

import java.util.Date;

import org.apache.commons.lang.StringUtils;

import com.cheyooh.service.dal.DAL;
import com.cheyooh.service.dal.DALFactory;
import com.cheyooh.service.framework.idata.Cmd;
import com.cheyooh.service.framework.idata.Result;
import com.cheyooh.service.framework.idata.ResultXJContent;
import com.cheyooh.service.sdk.db.dao.SdkCmcc49youVerifyMapper;
import com.cheyooh.service.sdk.db.dao.SdkNotifyMmdoMapper;
import com.cheyooh.service.sdk.db.dao.SdkOrderMapper;
import com.cheyooh.service.sdk.db.dao.SdkOrderMmdoMapper;
import com.cheyooh.service.sdk.db.dao.SdkTelephoneMapper;
import com.cheyooh.service.sdk.db.entity.SdkCmcc49youVerify;
import com.cheyooh.service.sdk.db.entity.SdkCmcc49youVerifyExample;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdo;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdoExample;
import com.cheyooh.service.sdk.db.entity.SdkOrder;
import com.cheyooh.service.sdk.db.entity.SdkOrderExample;
import com.cheyooh.service.sdk.db.entity.SdkOrderMmdo;
import com.cheyooh.service.sdk.db.entity.SdkOrderMmdoExample;
import com.cheyooh.service.sdk.db.entity.SdkTelephone;
import com.cheyooh.service.sdk.db.entity.SdkTelephoneExample;

public class Cmcc49youNotify extends AbstractNotifyService<Cmd> {
	private static final Integer CHINA_MOBILE = 1;

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.cheyooh.service.framework.basic.Service#verify(com.cheyooh.service
	 * .framework.idata.Cmd)
	 */
	@Override
	protected Result verify(Cmd cmd) {
		return null;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.cheyooh.service.framework.basic.Service#execute(com.cheyooh.service
	 * .framework.idata.Cmd)
	 */
	@Override
	protected Result execute(Cmd cmd) {
		DAL dal = DALFactory.createDAL();
		try {
			logger.info("enter cmcc49you notify");
			String outOrderNo = cmd.getServiceContext().getRequest()
					.getParameter("LinkID");
			if (outOrderNo == null) {
				outOrderNo = "";
			}
			String price = cmd.getServiceContext().getRequest()
					.getParameter("Price");
			float p = 0;
			if (StringUtils.isNotBlank(price) && StringUtils.isNotEmpty(price)) {
				p = Float.valueOf(price);
			}
			String mobile = cmd.getServiceContext().getRequest()
					.getParameter("Mobile");
			String port = cmd.getServiceContext().getRequest()
					.getParameter("Port");
			String mo_Msg = cmd.getServiceContext().getRequest()
					.getParameter("MO_Msg");
			String serviceID = cmd.getServiceContext().getRequest()
					.getParameter("ServiceID");

			SdkNotifyMmdoMapper notifyMmdoMapper = dal
					.getMapper(SdkNotifyMmdoMapper.class);
			SdkNotifyMmdoExample example = new SdkNotifyMmdoExample();
			example.createCriteria().andLinkidEqualTo(outOrderNo)
					.andPayChannelCodeEqualTo("cmcc49you");
			SdkNotifyMmdo entity = notifyMmdoMapper.selectOne(example);
			if (entity != null) {
				logger.info("cmcc49you notify have handled!!!");
				return result("OK");
			}

			SdkCmcc49youVerifyMapper sdkCmcc49youVerifyMapper = dal
					.getMapper(SdkCmcc49youVerifyMapper.class);
			SdkCmcc49youVerifyExample sdkCmcc49youVerifyExample = new SdkCmcc49youVerifyExample();
			sdkCmcc49youVerifyExample.createCriteria().andOutTradeNoEqualTo(
					outOrderNo);
			SdkCmcc49youVerify sdkCmcc49youVerify = sdkCmcc49youVerifyMapper
					.selectOne(sdkCmcc49youVerifyExample);
			if (sdkCmcc49youVerify != null) {
				SdkOrderMapper sdkOrderMapper = dal
						.getMapper(SdkOrderMapper.class);
				SdkOrderExample sdkOrderExample = new SdkOrderExample();
				sdkOrderExample.createCriteria().andOrderNoEqualTo(
						sdkCmcc49youVerify.getOrderNo());
				SdkOrder sdkOrder = sdkOrderMapper.selectOne(sdkOrderExample);
				if (sdkOrder != null) {
					SdkOrderMmdoMapper sdkOrderMmdoMapper = dal
							.getMapper(SdkOrderMmdoMapper.class);
					SdkOrderMmdoExample sdkOrderMmdoExample = new SdkOrderMmdoExample();
					sdkOrderMmdoExample.createCriteria().andPayIdEqualTo(
							sdkOrder.getPayId());
					SdkOrderMmdo sdkOrderMmdo = sdkOrderMmdoMapper
							.selectOne(sdkOrderMmdoExample);
					if (sdkOrderMmdo != null) {
						SdkNotifyMmdo sdkNotifyMmdo = new SdkNotifyMmdo();
						sdkNotifyMmdo.setLinkid(outOrderNo);
						sdkNotifyMmdo.setSpid(serviceID);
						sdkNotifyMmdo.setCmd(mo_Msg);
						sdkNotifyMmdo.setMobile(mobile);
						sdkNotifyMmdo.setSpnum(port);
						SdkTelephoneMapper sdkTelephoneMapper = dal
								.getMapper(SdkTelephoneMapper.class);
						SdkTelephoneExample sdkTelephoneExample = new SdkTelephoneExample();
						sdkTelephoneExample.createCriteria().andImsiEqualTo(
								sdkOrderMmdo.getRespImsi());
						SdkTelephone sdkTelephone = sdkTelephoneMapper
								.selectOne(sdkTelephoneExample);
						if (sdkTelephone != null) {
							sdkNotifyMmdo.setKey(String.valueOf(sdkTelephone
									.getProvinceNo()));
						}
						sdkNotifyMmdo.setGameId(sdkOrderMmdo.getGameId());
						sdkNotifyMmdo.setAmount(p);
						sdkNotifyMmdo.setCreateTime(new Date());
						sdkNotifyMmdo.setAdditionalStatus(sdkOrderMmdo
								.getAdditionalStatus());
						sdkNotifyMmdo.setOrderNo(sdkOrder.getOrderNo());
						sdkNotifyMmdo.setOperationType(CHINA_MOBILE);
						sdkNotifyMmdo.setPayChannelCode("cmcc49you");
						notifyMmdoMapper.insertSelective(sdkNotifyMmdo);
					}
				}
			}
			dal.commit();
		} finally {
			dal.close();
		}
		return result("OK");
	}

	private Result result(String msg) {
		return new Result(new ResultXJContent(msg, msg));
	}
}
