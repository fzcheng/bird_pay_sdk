package com.cheyooh.service.sdk.action.notify;

import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import com.cheyooh.service.dal.DAL;
import com.cheyooh.service.dal.DALFactory;
import com.cheyooh.service.framework.idata.Result;
import com.cheyooh.service.framework.idata.ResultXJContent;
import com.cheyooh.service.sdk.db.dao.SdkOrderMapper;
import com.cheyooh.service.sdk.db.dao.SdkOrderUnionpayMapper;
import com.cheyooh.service.sdk.db.entity.SdkOrder;
import com.cheyooh.service.sdk.db.entity.SdkOrderUnionpay;
import com.cheyooh.service.sdk.idata.notify.CmdUnionpayNotify;
import com.unionpay.upmp.sdk.service.UpmpService;

/**
 * 银联异步通知
 * @author Jaly
 *
 */
public class UnionpayNotify  extends AbstractNotifyService<CmdUnionpayNotify>{

	@Override
	protected Result verify(CmdUnionpayNotify cmd) {
		
		try {
			Map<String,String> params = new HashMap<String,String>();
			Map requestParams = cmd.getServiceContext().getRequest().getParameterMap();
			String tmp=cmd.getServiceContext().getRequest().getParameter("sysReserved");
			StringBuilder sb=new StringBuilder();
			for (Iterator iter = requestParams.keySet().iterator(); iter.hasNext();) {
				String name = (String) iter.next();
				if(name.equals("m")) continue;
				String[] values = (String[]) cmd.getServiceContext().getRequest().getParameterValues(name);
				String valueStr = "";
				for (int i = 0; i < values.length; i++) {
					valueStr = (i == values.length - 1) ? valueStr + values[i]
							: valueStr + values[i] + ",";
				}
				params.put(name, valueStr);
				sb.append("#"+name+"="+valueStr);
			}
			// 测试 打印请求
			logger.error("UnionpayNotify_param:"+sb.toString());
			if(!UpmpService.verifySignature(params)){// 服务器签名验证成功
				 return fail();
			}
			
		} catch (Exception e) {
			 return fail();
		}
		return null;
	}

	@Override
	protected Result execute(CmdUnionpayNotify cmd) {
		
		DAL dal=DALFactory.createDAL();
		try {
			SdkOrderMapper sdkOrderMapper=dal.getMapper(SdkOrderMapper.class);
			SdkOrderUnionpayMapper sdkOrderUnionpayMapper=dal.getMapper(SdkOrderUnionpayMapper.class);
			String tradeNo=cmd.getOrderNumber();
			logger.info("tradeNo:"+tradeNo);
			SdkOrder order=sdkOrderMapper.selectByPrimaryKey(tradeNo);
			if(order!=null){
				SdkOrderUnionpay unionpay=sdkOrderUnionpayMapper.selectByPrimaryKey(order.getPayId());
				if(unionpay!=null){
					setupOrderStatus(cmd,order,unionpay);
					sdkOrderMapper.updateByPrimaryKey(order);
					sdkOrderUnionpayMapper.updateByPrimaryKey(unionpay);
					dal.commit();
					 
					 NotifyOrder.doNotify(order);
					 
					 logger.info("Paid status: "+order.getStatus()+"("+cmd.getRespMsg()+"), payid: "+order.getPayId());
					 return success();
				}else {
					 return fail();
				}
			}else {
				return fail();
			}
		} catch (Exception e) {
			logger.error(e);
			return fail();
		}finally{
			dal.close();
		}
	}
	
	private void setupOrderStatus(CmdUnionpayNotify cmd, SdkOrder order,
			SdkOrderUnionpay unionpay) {
		
		unionpay.setNotifyTime(new Date(System.currentTimeMillis()));
		String transStatus =  cmd.getServiceContext().getRequest().getParameter("transStatus");// 交易状态
		if (null != transStatus && transStatus.equals("00")) {
		    // 交易处理成功
			unionpay.setNotifyTransstatus(transStatus);
			order.setStatus(1);
		} else {
			unionpay.setNotifyTransstatus(transStatus);
			order.setStatus(3);
		}
		order.setStatusDetail("Unionpay."+cmd.getRespMsg());
		
	}

	private Result success(){
		return new Result(new ResultXJContent("success","success"));
	}
	private Result fail(){
		return new Result(new ResultXJContent("fail","fail"));
	}

}
