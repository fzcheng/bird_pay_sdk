package com.cheyooh.service.sdk.action.notify;

import java.util.Date;

import com.cheyooh.service.dal.DAL;
import com.cheyooh.service.dal.DALFactory;
import com.cheyooh.service.framework.idata.Result;
import com.cheyooh.service.framework.idata.ResultXJContent;
import com.cheyooh.service.sdk.db.dao.SdkMmdoSettingMapper;
import com.cheyooh.service.sdk.db.dao.SdkNotifyMmdoMapper;
import com.cheyooh.service.sdk.db.entity.SdkMmdoSetting;
import com.cheyooh.service.sdk.db.entity.SdkMmdoSettingExample;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdo;
import com.cheyooh.service.sdk.idata.notify.CmdMmdoCTCCNotify;

public class MmdoCTCCNotify extends AbstractNotifyService<CmdMmdoCTCCNotify>{

	@Override
	protected Result verify(CmdMmdoCTCCNotify cmd) {
		
		return null;
	}

	private final String splitString="-";
	private final String DELIVRD_MSG="DELIVRD";
	private final Integer OPTYPE=3;
	private static final String  MMPMTELCOMTHIRD = "mmpmtelcomthird";
	@Override
	protected Result execute(CmdMmdoCTCCNotify cmd) {
		if(!DELIVRD_MSG.equals(cmd.getMsg())){
			fail("fail");
		}
		DAL dal=DALFactory.createDAL();
		try{
			SdkNotifyMmdoMapper notifyMmdoMapper=dal.getMapper(SdkNotifyMmdoMapper.class);
			SdkNotifyMmdo notifyMmdo=new SdkNotifyMmdo();
			String[] cmdArray=cmd.getPasswd().split(splitString);
			if(cmdArray.length>1){
				String sendContent=cmdArray[0];
				String sendGameId=cmdArray[1].substring(cmdArray[1].length()-3, cmdArray[1].length());
				notifyMmdo.setCmd(cmd.getPasswd());
				notifyMmdo.setCreateTime(new Date());
				notifyMmdo.setGameId(Integer.valueOf(sendGameId));
				notifyMmdo.setKey(cmd.getStatus());
				notifyMmdo.setLinkid(cmd.getLinkID());
				notifyMmdo.setMobile(cmd.getMobile());
				notifyMmdo.setSpid(cmd.getType());
				notifyMmdo.setSpnum(cmd.getType());
				notifyMmdo.setOperationType(OPTYPE);
				notifyMmdo.setPayChannelCode(MMPMTELCOMTHIRD);
				//获取金额
				SdkMmdoSettingMapper mmdoSettingMapper=dal.getMapper(SdkMmdoSettingMapper.class);
				SdkMmdoSettingExample mmdoSettingExample=new SdkMmdoSettingExample();
				mmdoSettingExample.createCriteria().andContentEqualTo(sendContent);
				SdkMmdoSetting mmdoSetting=mmdoSettingMapper.selectOne(mmdoSettingExample);
				if(mmdoSetting!=null){
					notifyMmdo.setAmount(mmdoSetting.getAmount());
				}
				notifyMmdoMapper.insertSelective(notifyMmdo);
				dal.commit();
			}
			
		}catch(Exception e){
			fail("fail");
		}finally{
			dal.close();
		}
		return success();
	}

	private Result success(){
		return new Result(new ResultXJContent("ok","ok"));
	}
	
	private Result fail(String msg){
		//log
		return new Result(new ResultXJContent(msg,msg));
	}
}
