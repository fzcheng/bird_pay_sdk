package com.cheyooh.service.sdk.action.notify;

import java.util.Date;

import org.apache.commons.lang.StringUtils;

import com.cheyooh.service.dal.DAL;
import com.cheyooh.service.dal.DALFactory;
import com.cheyooh.service.framework.idata.Result;
import com.cheyooh.service.framework.idata.ResultXJContent;
import com.cheyooh.service.sdk.cfg.Cfg;
import com.cheyooh.service.sdk.db.dao.SdkOrderMapper;
import com.cheyooh.service.sdk.db.dao.SdkOrderUpayMapper;
import com.cheyooh.service.sdk.db.entity.SdkOrder;
import com.cheyooh.service.sdk.db.entity.SdkOrderUpay;
import com.cheyooh.service.sdk.idata.notify.CmdUpayNotify;

/**
 * 调用就表示成功
 * @author Jaly
 *
 */
public class UpayNotify extends AbstractNotifyService<CmdUpayNotify>{

	@Override
	protected Result verify(CmdUpayNotify cmd) {
		
		return null;
	}

	@Override
	protected Result execute(CmdUpayNotify cmd) {
		
		DAL dal=DALFactory.createDAL();
		try {
			SdkOrderMapper sdkOrderMapper=dal.getMapper(SdkOrderMapper.class);
			SdkOrderUpayMapper sdkOrderUpayMapper=dal.getMapper(SdkOrderUpayMapper.class);
			String upay_hash=Cfg.cfg.getString("upay_hash");
			// 验证
			if(StringUtils.isNotEmpty(cmd.getHash()) && upay_hash.equalsIgnoreCase(cmd.getHash())){
				String order_no=cmd.getExtraInfo();
				SdkOrder sdkOrder=sdkOrderMapper.selectByPrimaryKey(order_no);
				if(sdkOrder!=null){
					SdkOrderUpay sdkOrderUpay=sdkOrderUpayMapper.selectByPrimaryKey(sdkOrder.getPayId());
					if(sdkOrderUpay!=null){
						sdkOrderUpay.setNotifyAmount(cmd.getAmount());
						sdkOrderUpay.setNotifyPoint(cmd.getPoint());
						sdkOrderUpay.setNotifyTime(new Date(System.currentTimeMillis()));
						sdkOrderUpay.setNotifyTradeid(cmd.getTradeId());
						sdkOrderUpay.setNotifyTradeStatus("OK");
						sdkOrderUpay.setNotifyTs(cmd.getTs());
						sdkOrder.setStatus(1);
						sdkOrderMapper.updateByPrimaryKey(sdkOrder);
						sdkOrderUpayMapper.updateByPrimaryKeySelective(sdkOrderUpay);
						dal.commit();
						NotifyOrder.doNotify(sdkOrder);
						 
						logger.info("Paid status: "+sdkOrder.getStatus()+"("+sdkOrderUpay.getNotifyTradeid()+"), payid: "+sdkOrder.getPayId());
						 
						return success();
					}
				}
			}
			return fail("fail");
		}finally{
			dal.close();
		}
	}
	
	private Result success(){
		return new Result(new ResultXJContent("OK","OK"));
	}
	
	private Result fail(String msg){
		//log
		return new Result(new ResultXJContent(msg,msg));
	}

}
