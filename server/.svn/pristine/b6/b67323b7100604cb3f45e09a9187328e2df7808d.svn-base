package com.cheyooh.service.sdk.action.notify;

import java.util.Date;

import com.cheyooh.service.dal.DAL;
import com.cheyooh.service.dal.DALFactory;
import com.cheyooh.service.framework.idata.Result;
import com.cheyooh.service.framework.idata.ResultXJContent;
import com.cheyooh.service.sdk.db.dao.SdkNotifyMmdoMapper;
import com.cheyooh.service.sdk.db.entity.SdkNotifyMmdo;
import com.cheyooh.service.sdk.idata.notify.CmdMmdoSinaNotify;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;

public class MmdoSinaNotify extends AbstractNotifyService<CmdMmdoSinaNotify>{
	private static final String  SINAMONTH = "sinamonth";
	private static final ObjectMapper mapper = new ObjectMapper();
  static {
    //mapper.setPropertyNamingStrategy(PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES);
    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
  }
  
	@Override
	protected Result execute(CmdMmdoSinaNotify cmd) {
		// TODO Auto-generated method stub
		return null;
	}
	
	private final Integer OPTYPE=1; 

	@Override
	protected Result verify(CmdMmdoSinaNotify cmd) {
	  logger.info("mmdo sina notify : " + cmd.toString());
		DAL dal=DALFactory.createDAL();
		try {
			SdkNotifyMmdoMapper notifyMmdoMapper=dal.getMapper(SdkNotifyMmdoMapper.class);
			String cmdString=cmd.getCommand();
			if("1".equals(cmd.getOrderState())){
				SdkNotifyMmdo notifyMmdo=new SdkNotifyMmdo();
				notifyMmdo.setCmd(cmd.getCommand());
				notifyMmdo.setCreateTime(new Date());
				notifyMmdo.setKey(cmd.getProvince());
				notifyMmdo.setLinkid(cmd.getTransactionId());
				notifyMmdo.setMobile(cmd.getMobile());
				notifyMmdo.setSpid(cmd.getSrc());
				notifyMmdo.setSpnum(cmd.getSrc());
				cmdString=cmdString.substring(cmdString.length()-3,cmdString.length());
				notifyMmdo.setGameId(Integer.valueOf(cmdString));
				notifyMmdo.setOperationType(OPTYPE);
				notifyMmdo.setAmount(Float.valueOf(cmd.getFee())/100);
				notifyMmdo.setPayChannelCode(SINAMONTH);
				notifyMmdoMapper.insertSelective(notifyMmdo);
				dal.commit();
				return success();
			}
		}finally{
			dal.close();
		}
		
		return fail("fail");
	}
	
	private Result success(){
		
		return new Result(new ResultXJContent("{ret:1}","{ret:1}"));
	}
	
	private Result fail(String msg){
		//log
		return new Result(new ResultXJContent("{ret:-1}","{ret:-1}"));
	}

}
